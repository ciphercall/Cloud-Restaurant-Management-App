@using System.Data
@using System.Data.SqlClient
@using Mvc_RestaurantAPP.Models
@model Mvc_RestaurantAPP.Models.UserReportViewModel

@{
    ViewBag.Title = "GetCompanyUserLogData";

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    RestaurantDbContext db = new RestaurantDbContext();
    Int64 compid = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedCompID"]);
    //UserName Name: [ ] , Company Name Field loaded in DropdownList
    List<SelectListItem> aslUserName = new List<SelectListItem>();
    var result = (from n in db.AslUsercoDbSet
                  where n.COMPID == compid
                  select n).ToList();

    foreach (var n in result)
    {
        AslUserco aslUserco = db.AslUsercoDbSet.FirstOrDefault(e => e.USERID == n.USERID);
        aslUserName.Add(new SelectListItem { Text = aslUserco.LOGINID, Value = aslUserco.USERID.ToString() });
    }


}
<link href="~/Content/bootstrap%20datepicker%20css/datepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap%20datepicker%20css/datepicker3.css" rel="stylesheet" />

<script src="~/Scripts/bootstrap-datepicker.js"></script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.AslUserco.COMPID, new { @Value = compid })
    @Html.HiddenFor(model => model.AslUserco.USERID, new { id = "hiddenUseerID" })
    <div class="container">
        <div class="row">
            <div class="col-md-1"></div>
            <div class="col-md-10">
                <div class="panel panel-info" style="padding: 0px; margin-bottom: 0px;">
                    <div class="panel-heading text-center">
                        <h3>User Log Data Reports</h3>
                    </div>
                </div>

                <div class="jumbotron" style="padding-top: 20px; padding-bottom: 11px">

                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-2">
                                @Html.Label("name", "From Date:    ")
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(model => model.FromDate, htmlAttributes: new { id = "fromDate", @class = "form-control", @Value = DateTime.Now.ToString("dd-MMM-yyyy") })
                            </div>
                            @if (TempData["ErrorFromDateMessage"] != null)
                            {
                                <div class="col-md-2"></div>
                                <div class="col-md-3">
                                    <h6 style="color: #C03523">@TempData["ErrorFromDateMessage"]</h6>
                                </div>

                            }
                            <div class="col-md-2"></div>
                            <div class="col-md-2">
                                @Html.Label("name", "To Date:    ")
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(model => model.ToDate, htmlAttributes: new { id = "toDate", @class = "form-control", @Value = DateTime.Now.ToString("dd-MMM-yyyy") })
                            </div>
                            @if (TempData["ErrorToDateMessage"] != null)
                            {
                                <div class="row">
                                    <div class="col-md-2"></div>
                                    <div class="col-md-3">
                                        <h6 style="color: #C03523">@TempData["ErrorToDateMessage"] </h6>
                                    </div>
                                </div>
                            }
                        </div>
                        @*@if (TempData["ErrorFromDateMessage"] != null)
                            {
                                <div class="row">
                                    <div class="col-md-4"></div>
                                    <div class="col-md-8">
                                        <h6 style="color: #C03523">@TempData["ErrorFromDateMessage"]</h6>
                                    </div>
                                </div>
                            }*@

                        @*<br />
                            <div class="row">
                                <div class="col-md-4">
                                    @Html.Label("name", "To Date:    ")
                                </div>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.ToDate, htmlAttributes: new { id = "toDate", @class = "form-control", @Value = DateTime.Now.ToString("dd-MMM-yyyy") })
                                </div>
                            </div>*@
                        @*@if (TempData["ErrorToDateMessage"] != null)
                            {
                                <div class="row">
                                    <div class="col-md-4"></div>
                                    <div class="col-md-8">
                                        <h6 style="color: #C03523">@TempData["ErrorToDateMessage"] </h6>
                                    </div>
                                </div>
                            }*@

                        @*<br />
                        <div class="row">
                            <div class="col-md-4">
                                @Html.Label("name", "User ID:    ")
                            </div>
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.AslUserco.USERID, aslUserName, "Select User Name", htmlAttributes: new { id = "ddlDropUsernameID", @class = "form-control" })
                            </div>
                        </div>
                        @if (TempData["ErrorMessageUserId"] != null)
                        {
                            <div class="row">
                                <div class="col-md-4"></div>
                                <div class="col-md-8">
                                    <h6 style="color: #C03523">@TempData["ErrorMessageUserId"]</h6>
                                </div>
                            </div>
                        }*@
                        <br />
                        <div class="row">
                            <div class="col-md-2">
                                @Html.Label("name", "User ID:    ")
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownListFor(model => model.AslUserco.USERID, aslUserName, "Select User Name", htmlAttributes: new { id = "ddlDropUsernameID", @class = "form-control" })
                            </div>
                        </div>
                        @if (TempData["ErrorMessageUserId"] != null)
                        {
                            <div class="row">
                                <div class="col-md-2"></div>
                                <div class="col-md-4">
                                    <h6 style="color: #C03523">@TempData["ErrorMessageUserId"]</h6>
                                </div>
                            </div>
                        }

                        @*<br />
                        <div class="row">
                            <div class="col-md-4">
                                @Html.Label("name", "User Name:", new { @class = "control-label" })
                            </div>
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.AslUserco.USERNM, new { id = "txtuserNameID", @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>

                        <br />
                        <div class="row">
                            <div class="col-md-4">
                                @Html.Label("name", "User Operation Type:", new { @class = "control-label" })
                            </div>
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.AslUserco.OPTP, new { id = "operationTypeID", @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>*@
                        <br />
                        <div class="row">
                            <div class="col-md-2">
                                @Html.Label("name", "User Name:", new { @class = "control-label" })
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.AslUserco.USERNM, new { id = "txtuserNameID", @class = "form-control", @readonly = "readonly" })
                            </div>
                            <div class="col-md-1"></div>
                            <div class="col-md-2">
                                @Html.Label("name", "Operation Type:", new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(model => model.AslUserco.OPTP, new { id = "operationTypeID", @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                        <br/>
                        <div class="row">
                            <div class="col-md-2"></div>
                            <div class="col-md-4"></div>
                            <div class="col-md-1"></div>
                            <div class="col-md-2"></div>
                            <div class="col-md-3" id="button">
                                @if (TempData["ErrorMessagetUserLogData"] != null || TempData["ErrorMessageUserId"] != null || TempData["ErrorToDateMessage"] != null || TempData["ErrorFromDateMessage"] != null)
                                {
                                    <input type="submit" class="btn btn-success" value="Print User Log Data" />
                                }
                                else
                                {
                                    <input type="submit" class="btn btn-success" value="Print User Log Data" formtarget="_blank" />
                                }

                            </div>
                        </div>
                        @if (TempData["ErrorMessagetUserLogData"] != null)
                        {
                            <div class="row">
                                <div class="col-md-2"></div>
                                <div class="col-md-4"></div>
                                <div class="col-md-1"></div>
                                <div class="col-md-2"></div>
                                <div class="col-md-3">
                                    <h6 style="color: #C03523">@TempData["ErrorMessagetUserLogData"]</h6>
                                </div>
                               
                            </div>
                        }

                    </div>
                </div>

            </div>
            <div class="col-md-1"></div>
        </div>

    </div>

    @*<div id="result-Table">
            @Html.Partial("~/Views/UserReport/_UserLogData.cshtml")
        </div>*@




    <script type="text/javascript">

        $('#fromDate').datepicker({
            format: "dd-M-yyyy"
            //format: "yyyy-M-dd"
        });

        $('#toDate').datepicker({
            format: "dd-M-yyyy"
            //format: "yyyy-M-dd"
        });


        //1. User Name: [    ]
        $('#ddlDropUsernameID').change(function () {
            //When the UserName (Dropdown list) changed then get the "User ID" from "ASLUSERCO" table
            var changedDropDown = $('#ddlDropUsernameID option:selected').val();

            var txtUserID = document.getElementById('hiddenUseerID');
            var txtUserName = document.getElementById('txtuserNameID');
            var txtOperationType = document.getElementById('operationTypeID');

            // when the value of the User Name field changes update the Select "UserName" field
            $("#txtuserNameID").val("Null");
            $("#operationTypeID").val("Null");

            $.getJSON(
                "/UserReport/UserNameChanged", { "ChangedDropDown": changedDropDown },
                function (myData) {
                    txtUserID.value = myData.USERID;
                    txtUserName.value = myData.USERNM;
                    txtOperationType.value = myData.OPTP;

                    var id = txtUserID.value;
                    document.getElementById("txtuserNameID").focus();

                    @*//Load Partial view
                    $('#result-Table').load('@Url.Action("UserLogData")', { userID: id });*@
                });

        });

    </script>



}



@*<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-1.9.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>*@
