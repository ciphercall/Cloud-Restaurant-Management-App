@using Mvc_RestaurantAPP.Models
@model IEnumerable<Mvc_RestaurantAPP.Models.BillingReportViewModel>

@{
    ViewBag.Title = "GetCategoryWiseSalesSummaryReport";
    Layout = null;

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }
    
    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    Int64 compid = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedCompID"]);
    string companyName = "";
    RestaurantDbContext db = new RestaurantDbContext();
    var SelectUserName = from n in db.AslCompanyDbSet
                         where n.COMPID == compid
                         select new { companyName = n.COMPNM };

    foreach (var n in SelectUserName)
    {
        companyName = n.companyName;
    }

    var compNm = companyName;

    var MAXCategoryID = Model.Select(z => z.CategoryID).Max();
    Int64 maxCategoryID = Convert.ToInt64(MAXCategoryID);

    var MINCategoryID = Model.Select(z => z.CategoryID).Min();
    Int64 minCategoryID = Convert.ToInt64(MINCategoryID);


}

<!DOCTYPE html>
<html lang="en">

<body>
    <table class="table" width="100%">
        <tr>
            <th align="center" valign="top">
                <h2 style="color: #226699">@compNm</h2>
            </th>
        </tr>
    </table>

    <table class="table" width="100%" cellpadding="2.0" cellspacing="3.0">
        <tr><th></th></tr>
    </table>

    <table class="table" width="100%" widths="8;3.4;3">
        <tr>
            <th><h4 style="color:black" valign="top">Category Wise Sales Statement</h4></th>
            <th></th>
            <th><h6 style="font-weight: bold">Print Date:</h6></th>
        </tr>        
    </table>
    
    <table class="table" width="100%" widths="11;3">
        <tr>
            <th></th>
            <th><h6> @DateTime.Now.ToString("dd-MMM-yyyy hh:mm tt")</h6></th>
        </tr>
    </table>

    <table class="table" width="100%" cellpadding="3.0" cellspacing="3.0">
        <tr><th></th></tr>
    </table>

    <table class="table" width="100%" widths="0.4;1;0.2;5">
        <tr>
            <th>
                <h6>From:</h6>
            </th>
            <th>
                <h6 style="font-weight: bold">@ViewBag.FromDate</h6>
            </th>
            <th>
                <h6>To:</h6>
            </th>
            <th>
                <h6 style="font-weight: bold"> @ViewBag.ToDate</h6>
            </th>
        </tr>
    </table>
    @*for height*@
    <table class="table" width="100%" cellpadding="3.0" cellspacing="3.0">
        <tr><th></th></tr>
    </table>
    @{
        Decimal totalALLGross = 0, totalAllAmount = 0, totalAllDiscount = 0;
    }


    <table border="1" class="table" width="100%" cellpadding="1.0" cellspacing="1.5" widths="5;2;3;3;3">
        <tr>
            <th align="center">
                Item Name
            </th>
            <th align="center">
                Quantity
            </th>
            @*<th align="center">
                    Rate
                </th>*@
            <th align="center">
                Amount
            </th>
            <th align="center">
                Discount
            </th>
            <th align="center">
                Gross Amount
            </th>
        </tr>
    </table>

    <table class="table" width="100%" cellpadding="1.0" cellspacing="1.5">
        <tr><th></th></tr>
    </table>
    @for (Int64 i = minCategoryID; i <= maxCategoryID; i++)
    {
        //var maxItemID = Model.Where(z => z.CategoryID == i).Select(z => z.ItemID).Max();
        //Int64 MaxitemID = Convert.ToInt64(maxItemID);

        //var minItemID = Model.Where(z => z.CategoryID == i).Select(z => z.ItemID).Min();
        //Int64 MinItemID = Convert.ToInt64(minItemID);

        var CategoryName = Model.Where(z => z.CategoryID == i).Select(z => z.CategoryName).ToArray();
        String categoryName = Convert.ToString(CategoryName[0]);
        var List = Model.Where(z => z.CategoryID == i).ToList();

        <table class="table" width="100%" widths="1.2;8;4">
            <tr>
                <th>
                    <h6>Category:</h6>
                </th>
                <th>
                    <h6 style="font-weight: bold">@categoryName</h6>
                </th>
            </tr>
        </table>

        <table class="table" width="100%" cellpadding="1.0" cellspacing="1.5">
            <tr><th></th></tr>
        </table>


        <table border="1" class="table" width="100%" cellpadding="1.0" cellspacing="1.5" widths="5;2;3;3;3">
            @{
        Decimal totalGross = 0, totalAmount = 0, totalDiscountAmount = 0;
            }
            @foreach (var item in List)
            {
                <tr>
                    <td>
                        <h6> @Html.DisplayFor(modelItem => item.ItemName)</h6>
                    </td>
                    <td align="right">
                        <h6> @Html.DisplayFor(modelItem => item.Quantity)</h6>
                    </td>
                    @*<td>
                            <h6> @Html.DisplayFor(modelItem => item.Rate)</h6>
                        </td>*@
                    <td align="right">
                        <h6> @Html.DisplayFor(modelItem => item.Amount)</h6>
                    </td>
                    <td align="right">
                        <h6> @Html.DisplayFor(modelItem => item.DiscountAmount)</h6>
                    </td>
                    <td align="right">
                        <h6> @Html.DisplayFor(modelItem => item.GrossAmount)</h6>
                    </td>
                </tr>
                totalAmount = totalAmount + Convert.ToDecimal(item.Amount);
                totalDiscountAmount = totalDiscountAmount + Convert.ToDecimal(item.DiscountAmount);
                totalGross = totalGross + Convert.ToDecimal(item.GrossAmount);

            }

            @{
            totalAllAmount = totalAllAmount + Convert.ToDecimal(totalAmount);
            totalAllDiscount = totalAllDiscount + Convert.ToDecimal(totalDiscountAmount);
            totalALLGross = totalALLGross + Convert.ToDecimal(totalGross);
            }
        </table>
        <table class="table" width="100%" cellpadding="1.0" cellspacing="1.5" widths="5;2;3;3;3">
            <tr>
                <td></td>
                <td align="right">
                    <strong>Sub Total:</strong>
                </td>
                <td align="right">
                    <h6> @totalAmount</h6>
                </td>
                <td align="right">
                    <h6>@totalDiscountAmount</h6>
                </td>
                <td align="right">
                    <h6>@totalGross</h6>
                </td>
            </tr>

        </table>

    }

    <table class="table" width="100%" cellpadding="1.0" cellspacing="1.5" widths="3;4;3;3;3">
        <tr>
            <td></td>
            <td></td>
            <td colspan="3">
                <hr />
            </td>
        
        </tr>
        <tr>
            <td></td>
            <td align="right">
                <strong>Grand Total:</strong>
            </td>
            <td align="right">
                <h6><strong>@totalAllAmount</strong></h6>
            </td>
            <td align="right">
                <h6><strong>@totalAllDiscount</strong></h6>
            </td>
            <td align="right">
                <h6><strong>@totalALLGross</strong></h6>
            </td>
        </tr>
    </table>

</body>
</html>
