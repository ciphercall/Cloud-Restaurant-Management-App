@using System.Web.UI.WebControls
@using Mvc_RestaurantAPP.Models
@model Mvc_RestaurantAPP.Models.CategoryItemModel

@{
    ViewBag.Title = "Index";

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();

    //var remarksID = TempData["CategoryRemarks"];

}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.PosItemmstModel.COMPID, new { id = "txtCompId", @Value = LoggedCompId })
    @Html.HiddenFor(model => model.PosItemmstModel.CATID, new { id = "txtCategoryId", @Value = TempData["categoryId"] })

    RestaurantDbContext db = new RestaurantDbContext();


    <div class="container">
        <div class="row">
            @*<div class="col-md-2"></div>*@
            <div class="col-md-12">
                <div class="panel panel-info" style="padding: 0px; margin-bottom: 0px;">
                    <div class="panel-heading text-center">
                        <h4>Item Information</h4>
                    </div>
                </div>

                <div class="jumbotron" style="padding-top: 20px; padding-bottom: 11px">
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-1"></div>
                            <div class="col-md-2 text-center">@Html.LabelFor(model => model.PosItemmstModel.CATNM, htmlAttributes: new { @class = "control-label" })</div>
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.PosItemmstModel.CATNM, new { @class = "form-control", id = "txtCategoryNm", @placeholder = "Category Name" })
                                @if (ViewBag.CategoryMsg != null)
                                {
                                    <h6 style="color: #C03523">@ViewBag.CategoryMsg <i style="color: #C03523" class="fa fa-question-circle fa-2x"></i></h6>

                                }                            
                            </div>
                            <div class="col-md-3"><input id="buttonApplyFilterId" type="submit" class="btn btn-info" value="Submit" name="command" /></div>

                            @Html.TextBoxFor(model => model.PosItemmstModel.INSLTUDE, new { id = "latlonPos", style = "display: none;" })
                            @Html.TextBoxFor(model => model.RmsItemModel.INSLTUDE, new { id = "latlonRms", style = "display: none;" })
                            <input id="lat" type="hidden" />
                            <input id="lon" type="hidden" />

                            @*<div class="col-md-6">
                                        <table class="table" style="margin-bottom: 0px">
                                            <tr>
                                                <td style="width: 15%; border-color: #EEEEEE;">@Html.LabelFor(model => model.PosItemmstModel.REMARKS, htmlAttributes: new { @class = "control-label" })</td>
                                                <td style="width: 35%; border-color: #EEEEEE;">
                                                    @Html.TextBoxFor(model => model.PosItemmstModel.REMARKS, new { id = "txtRemarks", @class = "form-control", @placeholder = "Remarks field" })
                                                    @Html.ValidationMessageFor(model => model.PosItemmstModel.REMARKS, "", new { @class = "text-danger" })
                                                    @if (ViewBag.NullField != null)
                                                    {
                                                       <h6 style="color: #C03523">@ViewBag.NullField <i style="color: #C03523" class="fa fa-question-circle fa-2x"></i></h6>
                                                    }
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="border-color: #EEEEEE;"></td>
                                                <td style="border-color: #EEEEEE; float: right; margin-right: 0px;"><input id="buttonApplyFilterId" type="submit" class="btn btn-info" value="Submit" name="command" /></td>
                                            </tr>
                                        </table>
                                    </div>*@
                        </div>                        
                        </div>
                    </div>
                </div>
            </div>

            @if (TempData["message"] != null)
            {
                <div class="text-center">
                    <h4 style="color: #BD7F1C">@TempData["message"] </h4>
                </div>
                <br />
            }


            <div class="row">
                <div class="row">
                    @if (TempData["categoryId"] != null)
                    {
                        <div class="col-md-12">

                            @Html.HiddenFor(model => model.RmsItemModel.COMPID, new { style = "width:3em;", @readonly = "readonly" })
                            @Html.HiddenFor(model => model.RmsItemModel.CATID, new { style = "width:3em;", @readonly = "readonly" })
                            @Html.HiddenFor(model => model.RmsItemModel.ITEMID, new { style = "width:3em;", @readonly = "readonly" })
                            <div class="col-md-3">
                                <span> <b>@Html.Label("name", "Item Name", htmlAttributes: new { @class = "control-label" })</b></span>
                                @Html.TextBoxFor(model => model.RmsItemModel.ITEMNM, new { @class = "form-control input-sm", id = "txtItemNm" })
                                @if (ViewBag.errorItemid != null)
                                {
                                    <h6 style="color: #C03523">@ViewBag.errorItemid<i style="color: #C03523" class="fa fa-question-circle fa-1x"></i></h6>
                                }
                            </div>

                            <div class="col-md-1">
                                <span>  @Html.Label("name", "Brand", htmlAttributes: new { @class = "control-label" })</span>
                                @Html.TextBoxFor(model => model.RmsItemModel.BRAND, new { @class = "form-control input-sm", id = "txtBrand" })
                            </div>
                            <div class="col-md-1">
                                <span>  @Html.Label("name", "Unit", htmlAttributes: new { @class = "control-label" })</span>
                                @Html.TextBoxFor(model => model.RmsItemModel.UNIT, new { @class = "form-control input-sm", id = "txtUnit" })
                            </div>
                            <div class="col-md-1">
                                <span>  @Html.Label("name", "Buy Rate", htmlAttributes: new { @class = "control-label" })</span>
                                @Html.TextBoxFor(model => model.RmsItemModel.BUYRT, new { @class = "form-control input-sm", id = "txtBuyRT" })
                            </div>
                            <div class="col-md-1">
                                <span>  @Html.Label("name", "Sale Rate", htmlAttributes: new { @class = "control-label" })</span>
                                @Html.TextBoxFor(model => model.RmsItemModel.SALRT, new { @class = "form-control input-sm", id = "txtSalRt" })
                            </div>
                            <div class="col-md-1">
                                <span>  @Html.Label("name", "Qty (Min)", htmlAttributes: new { @class = "control-label" })</span>
                                @Html.TextBoxFor(model => model.RmsItemModel.STKMIN, new { @class = "form-control input-sm", id = "txtStockMin" })
                            </div>
                            <div class="col-md-1">
                                <span>  @Html.Label("name", "Discount", htmlAttributes: new { @class = "control-label" })</span>
                                @Html.TextBoxFor(model => model.RmsItemModel.DISCOUNT, new { @class = "form-control input-sm", id = "txtDisCount" })
                            </div>
                            <div class="col-md-2">
                                <span>  @Html.Label("name", "Remarks", htmlAttributes: new { @class = "control-label" })</span>
                                @Html.TextBoxFor(model => model.RmsItemModel.REMARKS, new { @class = "form-control input-sm", id = "txtRemarks" })
                            </div>

                            @if (TempData["ShowAddButton"] == null)
                            {
                                <div class="col-md-1">
                                    <input type="submit" class="btn btn-info" value="Update" id="btnUpdate" name="command" style="margin-top:25px; margin-left:5px" />
                                </div>
                            }

                            else
                            {
                                <div class="col-md-1">
                                    <input type="submit" class="btn btn-info" value="Add" id="btnAdd" name="command" style="margin-top:25px; margin-left:5px" />
                                </div>
                            }


                        </div>
                    }
                </div>

                <br />
                @*@if (TempData["categoryId"] != null)
                    {
                        <div class="col-md-4"></div>
                        <div class="col-md-4">
                            <div class="panel panel-success" style="padding: 0px">
                                <div class="panel-heading text-center">
                                    <h4>Get the Item List</h4>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4"></div>
                    }*@

                @if (TempData["categoryId"] != null)
                {

                    var categoryId = Convert.ToInt64(TempData["categoryId"]);
                    Int64 LogCompId = Convert.ToInt64(HttpContext.Current.Session["loggedCompID"]);
                    var res = db.RmsItemDbSet.Where(d => d.CATID == categoryId && d.COMPID == LogCompId);
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <tr>
                                <td>
                                    <h6>Item Name</h6>
                                </td>
                                <td>
                                    <h6>Brand</h6>
                                </td>
                                <td>
                                    <h6>Unit</h6>
                                </td>
                                <td>
                                    <h6>Buy Rate</h6>
                                </td>
                                <td>
                                    <h6>Sale Rate</h6>
                                </td>
                                <td>
                                    <h6>Stock Minimum</h6>
                                </td>
                                <td>
                                    <h6>Discount Rate</h6>
                                </td>
                                <td>
                                    <h6>Remarks</h6>
                                </td>
                                <td></td>
                                <td></td>
                            </tr>

                            @foreach (var item in res)
                            {
                                <tr>
                                    @Html.HiddenFor(model => item.COMPID, new { style = "width:3em;", @readonly = "readonly" })
                                    @Html.HiddenFor(model => item.CATID, new { style = "width:3em;", @readonly = "readonly" })
                                    @Html.HiddenFor(model => item.ITEMID, new { style = "width:3em;", @readonly = "readonly" })
                                    @Html.HiddenFor(model => item.RMS_ITEMid, new { style = "width:3em;", @readonly = "readonly" })

                                    <td>
                                        @*@Html.TextBoxFor(model => item.ITEMNM, new { style = "width:10em;", id = "txtItemNm", @readonly = "readonly" })*@
                                        @Html.DisplayFor(model => item.ITEMNM, new { style = "width:10em;", id = "txtItemNm", @readonly = "readonly" })
                                    </td>
                                    <td>
                                        @*@Html.TextBoxFor(model => item.BRAND, new { style = "width:6em;", id = "txtBrand", @readonly = "readonly" })*@
                                        @Html.DisplayFor(model => item.BRAND, new { style = "width:6em;", id = "txtBrand", @readonly = "readonly" })
                                    </td>
                                    <td>
                                        @*@Html.TextBoxFor(model => item.UNIT, new { style = "width:2em;", id = "txtUnit", @readonly = "readonly" })*@
                                        @Html.DisplayFor(model => item.UNIT, new { style = "width:2em;", id = "txtUnit", @readonly = "readonly" })
                                    </td>
                                    <td>
                                        @*@Html.TextBoxFor(model => item.BUYRT, new { style = "width:6em; text-align:right", id = "txtBuyRT", @readonly = "readonly" })*@
                                        @Html.DisplayFor(model => item.BUYRT, new { style = "width:6em; text-align:right", id = "txtBuyRT", @readonly = "readonly" })
                                    </td>
                                    <td>
                                        @*@Html.TextBoxFor(model => item.SALRT, new { style = "width:6em; text-align:right", id = "txtSalRt", @readonly = "readonly" })*@
                                        @Html.DisplayFor(model => item.SALRT, new { style = "width:6em; text-align:right", id = "txtSalRt", @readonly = "readonly" })
                                    </td>
                                    <td>
                                        @*@Html.TextBoxFor(model => item.STKMIN, new { style = "width:6em;", id = "txtStockMin", @readonly = "readonly" })*@
                                        @Html.DisplayFor(model => item.STKMIN, new { style = "width:6em;", id = "txtStockMin", @readonly = "readonly" })
                                    </td>

                                    <td>
                                        @*@Html.TextBoxFor(model => item.DISCOUNT, new { style = "width: 4em; text-align:right", id = "txtDiscount", @readonly = "readonly" })*@
                                        @Html.DisplayFor(model => item.DISCOUNT, new { style = "width: 4em; text-align:right", id = "txtDiscount", @readonly = "readonly" })
                                    </td>
                                    <td>
                                        @*@Html.TextBoxFor(model => item.REMARKS, new { style = "width: 7em;", id = "txtRemarks", @readonly = "readonly" })*@
                                        @Html.DisplayFor(model => item.REMARKS, new { style = "width: 7em;", id = "txtRemarks", @readonly = "readonly" })
                                    </td>

                                    <td>
                                        <span>
                                            <a href="@Url.Action("EditItemUpdate", new { id=item.RMS_ITEMid,cid = item.COMPID, catid = item.CATID, itemId=item.ITEMID,itemName=item.ITEMNM })" class="btn btn-sm btn-info">
                                                <span class="glyphicon glyphicon-pencil"></span>
                                            </a>
                                        </span>


                                    </td>
                                    <td>
                                        <span>
                                            <a href="@Url.Action("ItemDelete", new { id = item.RMS_ITEMid, cid = item.COMPID, catid = item.CATID, itemId = item.ITEMID, itemName = item.ITEMNM })" class="btn btn-sm btn-danger">
                                                <span class="glyphicon glyphicon-remove"></span>
                                            </a>
                                        </span>

                                    </td>

                                </tr>

                            }

                        </table>
                    </div>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-striped"></table>
                    </div>
                }



            </div>
        </div>



        @*<div class="col-md-2"></div>*@

        <script type="text/javascript">

            $(document).ready(function () {
                $('#txtCategoryNm').autocomplete(
                    {
                        source: '@Url.Action("TagSearch", "CategoryItem")',
                        change: txtOneChanged,

                    });
            });

            function txtOneChanged() {

                var changedText = $("#txtCategoryNm").val();
                var txtBox = document.getElementById('txtCategoryId');
                var remarkstxtbox = document.getElementById('txtRemarks');



                $.getJSON(
                    '/CategoryItem/ItemNameChanged', { "ChangedText": changedText },
                    function (result) {
                        txtBox.value = result.catid;
                        remarkstxtbox.value = result.rmrks;
                        //document.getElementById("txtRemarks").focus();
                        document.getElementById("txtCategoryId").focus();
                    });
            }



            //Enter Button Key false;
            $(function () {
                $('input').keydown(function (e) {
                    if (e.keyCode == 13) {
                        $("input[value='OK']").focus().click();
                        return false;
                    }
                });
            });


        </script>


    //Latitute & longitude
    <script src="http://maps.google.com/maps/api/js?sensor=false">
    </script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);
            //navigator.geolocation.getCurrentPosition(showPosition, positionError);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlonPos").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
                $("#latlonRms").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
        });
    </script>

}

<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<link href="~/Content/jquery.jqGrid/ui.jqgrid.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.9.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>
<script src="~/Scripts/i18n/grid.locale-en.js"></script>
<script src="~/Scripts/jquery.jqGrid.min.js"></script>
@* Grid view Script ,that means Grid View Table *@
@*<script src="~/Scripts/_CategoryAsl.js"></script>*@